<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yiyue.personalblog.mapper.blog.BlogMapper">
  <resultMap id="BaseResultMap" type="com.yiyue.personalblog.entity.blog.domain.Blog">
    <id column="blogId" jdbcType="INTEGER" property="blogid" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="firstPicture" jdbcType="VARCHAR" property="firstpicture" />
    <result column="tab" jdbcType="VARCHAR" property="tab" />
    <result column="views" jdbcType="INTEGER" property="views" />
    <result column="commentCount" jdbcType="INTEGER" property="commentcount" />
    <result column="appreCiation" jdbcType="CHAR" property="appreciation" />
    <result column="shareStatement" jdbcType="CHAR" property="sharestatement" />
    <result column="commentBled" jdbcType="CHAR" property="commentbled" />
    <result column="published" jdbcType="CHAR" property="published" />
    <result column="recommend" jdbcType="CHAR" property="recommend" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="typeId" jdbcType="INTEGER" property="typeid" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <association property="blogType" javaType="com.yiyue.personalblog.entity.blog.domain.BlogType">
      <id property="typeid" column="typeid"/>
      <result property="typename" column="typename"/>
      <result property="remark" column="remark"/>
    </association>
    <association property="userInfo" javaType="com.yiyue.personalblog.entity.user.domain.UserInfo">
      <id column="id" jdbcType="INTEGER" property="id" />
      <result column="user_Nick_name" jdbcType="VARCHAR" property="userNickName" />
      <result column="user_login_Name" jdbcType="VARCHAR" property="userLoginName" />
      <result column="user_Password" jdbcType="VARCHAR" property="userPassword" />
      <result column="salt" jdbcType="VARCHAR" property="salt" />
      <result column="user_Phone" jdbcType="CHAR" property="userPhone" />
      <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
      <result column="user_sex" jdbcType="CHAR" property="userSex" />
      <result column="user_Head_Portrait" jdbcType="VARCHAR" property="userHeadPortrait" />
      <result column="user_role_id" jdbcType="VARCHAR" property="userRoleId" />
      <result column="createBy" jdbcType="BIGINT" property="createby" />
      <result column="createDate" jdbcType="TIMESTAMP" property="createdate" />
      <result column="modifyBy" jdbcType="BIGINT" property="modifyby" />
      <result column="modifyDate" jdbcType="TIMESTAMP" property="modifydate" />
      <result column="spareOne" jdbcType="VARCHAR" property="spareone" />
      <result column="spareTwo" jdbcType="VARCHAR" property="sparetwo" />
      <result column="spareThree" jdbcType="VARCHAR" property="sparethree" />
      <result column="spareFour" jdbcType="VARCHAR" property="sparefour" />
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    blogId, title, content, firstPicture, tab, views, commentCount, appreCiation, shareStatement, 
    commentBled, published, recommend, createTime, updateTime, description, typeId, userId
  </sql>
  <select id="selectByExample" parameterType="com.yiyue.personalblog.entity.blog.example.BlogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectRecommend"  resultMap="BaseResultMap">
    SELECT * FROM blog
    LEFT JOIN blog_type AS b ON blog.typeId = b.typeId
    INNER JOIN user_info ON blog.userId = user_info.id
    WHERE recommend = 1
    ORDER BY `blog`.createTime DESC
    LIMIT 4
  </select>
  <select id="selectPublished" parameterType="com.yiyue.personalblog.entity.blog.domain.Blog" resultMap="BaseResultMap">
    SELECT * FROM blog
    LEFT JOIN blog_type AS blogType ON blog.typeId = blogType.typeId
    INNER JOIN user_info AS userInfo ON blog.userId = userInfo.id
    <where>
      recommend = 1
      <if test="typeId != null and typeId != ''">
        and blogType.typeId = #{typeId}
      </if>
    </where>
    ORDER BY `blog`.createTime DESC
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blog
    where blogId = #{blogid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blog
    where blogId = #{blogid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yiyue.personalblog.entity.blog.example.BlogExample">
    delete from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="blogId" keyProperty="blogid" parameterType="com.yiyue.personalblog.entity.blog.domain.Blog" useGeneratedKeys="true">
    insert into blog (title, content, firstPicture, 
      tab, views, commentCount, 
      appreCiation, shareStatement, commentBled, 
      published, recommend, createTime, 
      updateTime, description, typeId, 
      userId)
    values (#{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{firstpicture,jdbcType=VARCHAR}, 
      #{tab,jdbcType=VARCHAR}, #{views,jdbcType=INTEGER}, #{commentcount,jdbcType=INTEGER}, 
      #{appreciation,jdbcType=CHAR}, #{sharestatement,jdbcType=CHAR}, #{commentbled,jdbcType=CHAR}, 
      #{published,jdbcType=CHAR}, #{recommend,jdbcType=CHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{description,jdbcType=VARCHAR}, #{typeid,jdbcType=INTEGER}, 
      #{userid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="blogId" keyProperty="blogid" parameterType="com.yiyue.personalblog.entity.blog.domain.Blog" useGeneratedKeys="true">
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="firstpicture != null">
        firstPicture,
      </if>
      <if test="tab != null">
        tab,
      </if>
      <if test="views != null">
        views,
      </if>
      <if test="commentcount != null">
        commentCount,
      </if>
      <if test="appreciation != null">
        appreCiation,
      </if>
      <if test="sharestatement != null">
        shareStatement,
      </if>
      <if test="commentbled != null">
        commentBled,
      </if>
      <if test="published != null">
        published,
      </if>
      <if test="recommend != null">
        recommend,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="typeid != null">
        typeId,
      </if>
      <if test="userid != null">
        userId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="firstpicture != null">
        #{firstpicture,jdbcType=VARCHAR},
      </if>
      <if test="tab != null">
        #{tab,jdbcType=VARCHAR},
      </if>
      <if test="views != null">
        #{views,jdbcType=INTEGER},
      </if>
      <if test="commentcount != null">
        #{commentcount,jdbcType=INTEGER},
      </if>
      <if test="appreciation != null">
        #{appreciation,jdbcType=CHAR},
      </if>
      <if test="sharestatement != null">
        #{sharestatement,jdbcType=CHAR},
      </if>
      <if test="commentbled != null">
        #{commentbled,jdbcType=CHAR},
      </if>
      <if test="published != null">
        #{published,jdbcType=CHAR},
      </if>
      <if test="recommend != null">
        #{recommend,jdbcType=CHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null">
        #{typeid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yiyue.personalblog.entity.blog.example.BlogExample" resultType="java.lang.Long">
    select count(*) from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="findBlogCount" resultType="java.lang.Integer">
      SELECT COUNT(1) FROM `blog`
      <where>
        <if test="typeId != null and typeId != ''">
           typeid = #{typeId}
        </if>
      </where>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update blog
    <set>
      <if test="record.blogid != null">
        blogId = #{record.blogid,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.firstpicture != null">
        firstPicture = #{record.firstpicture,jdbcType=VARCHAR},
      </if>
      <if test="record.tab != null">
        tab = #{record.tab,jdbcType=VARCHAR},
      </if>
      <if test="record.views != null">
        views = #{record.views,jdbcType=INTEGER},
      </if>
      <if test="record.commentcount != null">
        commentCount = #{record.commentcount,jdbcType=INTEGER},
      </if>
      <if test="record.appreciation != null">
        appreCiation = #{record.appreciation,jdbcType=CHAR},
      </if>
      <if test="record.sharestatement != null">
        shareStatement = #{record.sharestatement,jdbcType=CHAR},
      </if>
      <if test="record.commentbled != null">
        commentBled = #{record.commentbled,jdbcType=CHAR},
      </if>
      <if test="record.published != null">
        published = #{record.published,jdbcType=CHAR},
      </if>
      <if test="record.recommend != null">
        recommend = #{record.recommend,jdbcType=CHAR},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null">
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.typeid != null">
        typeId = #{record.typeid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update blog
    set blogId = #{record.blogid,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      firstPicture = #{record.firstpicture,jdbcType=VARCHAR},
      tab = #{record.tab,jdbcType=VARCHAR},
      views = #{record.views,jdbcType=INTEGER},
      commentCount = #{record.commentcount,jdbcType=INTEGER},
      appreCiation = #{record.appreciation,jdbcType=CHAR},
      shareStatement = #{record.sharestatement,jdbcType=CHAR},
      commentBled = #{record.commentbled,jdbcType=CHAR},
      published = #{record.published,jdbcType=CHAR},
      recommend = #{record.recommend,jdbcType=CHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      description = #{record.description,jdbcType=VARCHAR},
      typeId = #{record.typeid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yiyue.personalblog.entity.blog.domain.Blog">
    update blog
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="firstpicture != null">
        firstPicture = #{firstpicture,jdbcType=VARCHAR},
      </if>
      <if test="tab != null">
        tab = #{tab,jdbcType=VARCHAR},
      </if>
      <if test="views != null">
        views = #{views,jdbcType=INTEGER},
      </if>
      <if test="commentcount != null">
        commentCount = #{commentcount,jdbcType=INTEGER},
      </if>
      <if test="appreciation != null">
        appreCiation = #{appreciation,jdbcType=CHAR},
      </if>
      <if test="sharestatement != null">
        shareStatement = #{sharestatement,jdbcType=CHAR},
      </if>
      <if test="commentbled != null">
        commentBled = #{commentbled,jdbcType=CHAR},
      </if>
      <if test="published != null">
        published = #{published,jdbcType=CHAR},
      </if>
      <if test="recommend != null">
        recommend = #{recommend,jdbcType=CHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null">
        typeId = #{typeid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
    </set>
    where blogId = #{blogid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yiyue.personalblog.entity.blog.domain.Blog">
    update blog
    set title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      firstPicture = #{firstpicture,jdbcType=VARCHAR},
      tab = #{tab,jdbcType=VARCHAR},
      views = #{views,jdbcType=INTEGER},
      commentCount = #{commentcount,jdbcType=INTEGER},
      appreCiation = #{appreciation,jdbcType=CHAR},
      shareStatement = #{sharestatement,jdbcType=CHAR},
      commentBled = #{commentbled,jdbcType=CHAR},
      published = #{published,jdbcType=CHAR},
      recommend = #{recommend,jdbcType=CHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR},
      typeId = #{typeid,jdbcType=INTEGER},
      userId = #{userid,jdbcType=INTEGER}
    where blogId = #{blogid,jdbcType=INTEGER}
  </update>




</mapper>